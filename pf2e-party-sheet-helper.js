const moduleName="pf2e-party-sheet-helper";const SUBSYSTEM_TIERS_LABELS={reputation:[[-30,`${moduleName}.subsystems.reputation.labels.hunted`],[-15,`${moduleName}.subsystems.reputation.labels.hated`],[-5,`${moduleName}.subsystems.reputation.labels.disliked`],[4,`${moduleName}.subsystems.reputation.labels.ignored`],[14,`${moduleName}.subsystems.reputation.labels.liked`],[29,`${moduleName}.subsystems.reputation.labels.admired`],[50,`${moduleName}.subsystems.reputation.labels.revered`],[200,`${moduleName}.subsystems.reputation.labels.revered`]]};function isGM(){return game.users.activeGM===game.user}async function sendItemToActor(e,t,a,s,i){const n=game.actors.get(t);if(!hasPermissions(n)){executeAsGM(SEND_ITEM,{ownerId:e,targetId:t,itemId:a,qty:s,stack:i});return}const o=game.actors.get(e);if(!o||!n)return;const r=o.items.get(a);if(!r)return;o.transferItemToActor(n,r,s,undefined,i);ChatMessage.create({style:CONST.CHAT_MESSAGE_STYLES.EMOTE,flavor:`<h4 class="action"><strong>Interact</strong><span class="action-glyph">A</span><span class="subtitle">(Give item)</span></h4><div class="tags"><span class="tag tooltipstered" data-slug="manipulate" data-description="PF2E.TraitDescriptionManipulate">Manipulate</span></div><hr class="action-divider">`,content:`<p class="action-content"><img src="${r.img}">${o.name} gives ${s} Ã— ${r.name} to ${n.name}.</p>`,speaker:ChatMessage.getSpeaker({actor:o})})}const dcByLevel=new Map([[-1,13],[0,14],[1,15],[2,16],[3,18],[4,19],[5,20],[6,22],[7,23],[8,24],[9,26],[10,27],[11,28],[12,30],[13,31],[14,32],[15,34],[16,35],[17,36],[18,38],[19,39],[20,40],[21,42],[22,44],[23,46],[24,48],[25,50]]);let allTraits={};const golarionMileInFeet=6e3;const minutesPerDay=24*60;const minutesPerWeek=minutesPerDay*7;const gradient=[[0,[255,0,0]],[50,[204,204,0]],[100,[0,128,0]]];const sliderWidth=500;function healthStatuses(){const e=game.settings.get(moduleName,"healthStatus").split(",").map(e=>e.trim());if(e.length>=2){const a=Math.round(1e4/(e.length-2))/100;const t=[{label:e[0],percent:{from:0,to:0}}];t.push(...e.slice(1,-1).map((e,t)=>{return{label:e,percent:{from:t*a,to:(t+1)*a}}}));t.push({label:e[e.length-1],percent:{from:100,to:100}});return t}return[]}function calculateColor(t){if(t===0||isNaN(t))return gradient[0][1];let a=[];for(let e=0;e<gradient.length;e++){if(t<=gradient[e][0]){a=[e-1,e];break}}const e=gradient[a[0]][1];const s=gradient[a[1]][1];const i=sliderWidth*(gradient[a[0]][0]/100);const n=sliderWidth*(gradient[a[1]][0]/100)-i;const o=sliderWidth*(t/100)-i;const r=o/n;return pickHex(s,e,r)}function pickHex(e,t,a){const s=a;const i=1-s;return[Math.round(e[0]*s+t[0]*i),Math.round(e[1]*s+t[1]*i),Math.round(e[2]*s+t[2]*i)]}function healthEstimateForActor(e,t,a){const s=game.settings.get("pf2e","staminaVariant")?(e.system.attributes.hp.value+(e.system.attributes.hp.sp?.value??0))/(e.system.attributes.hp.max+(e.system.attributes.hp.sp?.max??0))*100:e.system.attributes.hp.value/e.system.attributes.hp.max*100;let i=calculateColor(s);let n="?";if(s===0){n=a[0].label}else if(s===100){n=a[a.length-1].label}else{n=a.find(e=>s<=e.percent.to&&s>=e.percent.from)?.label??"Undefined"}const o=t.find(`div[data-tab="overview"]`).find(`.member[data-actor-uuid="${e.uuid}"]`).find(".health-bar:not(.stamina-bar)");const r=t.find(`div[data-tab="exploration"]`).find(`.content[data-actor-uuid="${e.uuid}"]`).parent().find(".health-bar:not(.stamina-bar)");if(!game.user.isGM){o.find("span").text(`${n}`);o.find(".bar").css({"background-color":`rgb(${i[0]},${i[1]},${i[2]})`});r.find("span").text(`${n}`);r.find(".bar").css({"background-color":`rgb(${i[0]},${i[1]},${i[2]})`})}else{o.attr("data-tooltip",n);r.attr("data-tooltip",n)}if(game.settings.get("pf2e","staminaVariant")){const l=t.find(`div[data-tab="exploration"]`).find(`.content[data-actor-uuid="${e.uuid}"]`).parent().find(".stamina-bar");const c=t.find(`div[data-tab="overview"]`).find(`.member[data-actor-uuid="${e.uuid}"]`).find(".stamina-bar");if(!game.user.isGM){c.find("span").text(`${n}`);c.find(".bar").css({"background-color":`rgb(${i[0]},${i[1]},${i[2]})`});l.find("span").text(`${n}`);l.find(".bar").css({"background-color":`rgb(${i[0]},${i[1]},${i[2]})`})}else{c.attr("data-tooltip",n);l.attr("data-tooltip",n)}}}Hooks.on("init",function(){game.settings.register(moduleName,"healthStatus",{name:"Health status at party sheet",scope:"world",config:true,default:"Unconscious, Near Death, Badly Injured, Injured, Barely Injured, Unharmed",type:String});game.settings.register(moduleName,"useHealthStatus",{name:"Use Health Status at party sheet",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"partyLeader",{name:"Possibility to set party leader",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"hideWealthFromPC",{name:"Hide Wealth from PCs",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"enableSubsystem",{name:"Enable subsystems",scope:"world",config:true,default:false,requiresReload:true,type:Boolean});game.settings.register(moduleName,"showSubsystem",{name:"Show subsystems to PCs",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"showAchievements",{name:"Show achievements",scope:"world",config:true,default:false,requiresReload:true,type:Boolean});game.settings.register(moduleName,"showEncounterData",{name:"Show encounter base info",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"showAfflictions",{name:"Show afflictions",scope:"world",config:true,default:false,requiresReload:true,type:Boolean});game.settings.register(moduleName,"showEffects",{name:"Show effects",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"showFocus",{name:"Show Focus Points",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"showSpells",{name:"Show Spells Info",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"showPrintPC",{name:"Show print button to PC",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"printExtendedInfo",{name:"Print extended info",hint:"Print rarity, traits, description",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"printShowPrice",{name:"Print price of items",scope:"world",config:true,default:true,type:Boolean});game.settings.register(moduleName,"hideGeneralInfo",{name:"Hide general info about player at Party Sheet",hint:"Hide information about race/class/sex",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"maxEncumbrance",{name:"Set max encumbrance for party sheet",scope:"world",config:true,default:0,type:Number});game.settings.register(moduleName,"maxEncumbranceBehaviour",{name:"Behaviour of Max Encumbrance logic",scope:"world",config:true,type:String,choices:{notify:"Sent notification",notadd:"Not add to stash"},default:"notify",onChange:e=>{}});game.settings.register(moduleName,"skills",{name:"Store last skills rolls for GM",hint:"Now only deception/perception/stealth skills",scope:"world",config:true,default:false,type:Boolean});game.settings.register(moduleName,"shareHero",{name:"Share hero points between party and heroes",hint:"",scope:"world",config:true,default:0,type:Number});game.settings.register(moduleName,"defaultCalculatorValue",{name:"Use feet as default value",hint:"for calculate speed (easy mod)",scope:"world",config:true,default:false,type:Boolean})});Hooks.on("renderAbstractSidebarTab",function(e,t){if(!game.user.isGM){return}if(e.id!=="actors"){return}const a=t.querySelectorAll(".directory-list.parties header");if(!a){return}a.forEach(e=>{let i=game.actors.get(e.closest(".directory-item")?.dataset?.entryId);if(!i){return}if(!e.querySelector(".create-combat")){let a=i.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug)).map(e=>e.getActiveTokens(true,true)).flat();const t=foundry.utils.parseHTML(`<button type="button" class="create-combat left-control inline-control icon fas fa-swords" data-tooltip="Create Combat"></button>`);const s=e.querySelector("span");if(s?.parentNode){s.parentNode.insertBefore(t,s)}t.addEventListener("click",async function(e){e.stopPropagation();if(game.combat){let t=game.combat.turns.map(e=>e.token.id);a=a.filter(e=>!t.includes(e.id));a=a.map(e=>{return{tokenId:e.id,actorId:e.actor?.id,sceneId:e.scene.id}});await game.combat.createEmbeddedDocuments("Combatant",a);ui.notifications.info("Combatants were added");return}await Combat.create({scene:canvas.scene.id,active:true});if(a.length>0){a=a.map(e=>{return{tokenId:e.id,actorId:e.actor?.id,sceneId:e.scene.id}});await game.combat.createEmbeddedDocuments("Combatant",a);ui.notifications.info("Combat was created")}})}if(!e.querySelector(".damage-all")){const a=foundry.utils.parseHTML(`<button type="button" class="damage-all left-control inline-control icon fas fa-mace" data-tooltip="Damage/Heal All"></button>`);const s=e.querySelector("span");if(s?.parentNode){s.parentNode.insertBefore(a,s)}a.addEventListener("click",async function(e){let t=CONFIG.Dice.rolls.find(e=>e.name==="DamageRoll");if(!t){return}const{formula:a}=await Dialog.wait({title:"Apply damage/heal",content:`<input type="text" name="name" /><br/><p>Positive value for Heal, negative for Damage</p>`,buttons:{ok:{label:"Apply",icon:"<i class='fas fa-plus'></i>",callback:e=>{return{formula:e.find("input").val()}}},cancel:{label:"Cancel",icon:"<i class='fa-solid fa-ban'></i>"}},default:"cancel"});if(!a){return}let s;if(Number.isNumeric(a)){s=Number.parseInt(a)}else{s=new t(a.startsWith("-")?a.slice(1):a);await s.evaluate({async:true});s.toMessage();if(a.startsWith("-")){s=-s.total}}s*=-1;i.members.forEach((e,t)=>{e.applyDamage({damage:s,token:e.getActiveTokens(true,false)[0]??{name:e.name}})})})}})});async function handleSkillRoll(e,t){const a=$(e.currentTarget).data().slug;if(!a){return}const s=$(e.currentTarget).closest(".summary").find("nav > .active").data()?.view==="rk";const i=t.actor.members.map(e=>e.level);const n=dcByLevel.get(Math.round(i.reduce((e,t)=>e+t,0)/i.length))??50;const o=e.ctrlKey||e.metaKey;const{dc:r}=await Dialog.wait({title:"DC of skill",content:`
            <h3>DC of check</h3>
            <input id="skill-dc" type="number" min="0" value=${n} />
        `,buttons:{ok:{label:"Create DC Template",icon:"<i class='fa-solid fa-magic'></i>",callback:e=>{return{dc:parseInt(e[0].querySelector("#skill-dc").value)}}},cancel:{label:"Cancel",icon:"<i class='fa-solid fa-ban'></i>"}},default:"ok"});if(r===undefined){return}let l=[];if(o){l.push("secret")}if(s){l.push("action:recall-knowledge")}l=l.join(",");const c=`@Check[type:${a}|dc:${r}${l?"|traits:"+l:""}]{${a.capitalize()} Check}`;if(e.shiftKey){navigator.clipboard.writeText(c);ui.notifications.info("Copied the text of check")}else{ChatMessage.create({style:CONST.CHAT_MESSAGE_STYLES.OOC,content:c})}}async function handleSaveRoll(e,t){const a=$(e.currentTarget).find("label").text();let s=SHORT_SAVES[a];if(!s){return}const i=t.actor.members.map(e=>e.level);const n=dcByLevel.get(Math.round(i.reduce((e,t)=>e+t,0)/i.length))??50;const o=e.ctrlKey||e.metaKey;const{dc:r}=await Dialog.wait({title:"DC of skill",content:`
            <h3>DC of check</h3>
            <input id="skill-dc" type="number" min="0" value=${n} />
        `,buttons:{ok:{label:"Create DC Template",icon:"<i class='fa-solid fa-magic'></i>",callback:e=>{return{dc:parseInt(e[0].querySelector("#skill-dc").value)}}},cancel:{label:"Cancel",icon:"<i class='fa-solid fa-ban'></i>"}},default:"ok"});if(r===undefined){return}let l=o?"|traits:secret":"";const c=`@Check[type:${s}|dc:${r}${l}]{${s.capitalize()} Check}`;if(e.shiftKey){navigator.clipboard.writeText(c);ui.notifications.info("Copied the text of check")}else{ChatMessage.create({style:CONST.CHAT_MESSAGE_STYLES.OOC,content:c})}}function addStamina(e,s){if(!game.settings.get("pf2e","staminaVariant")){return}e.actor.members.forEach(e=>{s.find(`div[data-tab="overview"]`).find(`.member[data-actor-uuid="${e.uuid}"]`).find(".health-bar").css({bottom:"10px"});const t=!e.system.attributes.hp.sp?-1:e.system.attributes.hp.sp.value/e.system.attributes.hp.sp.max*100;let a=t<0?"-":`${e.system.attributes.hp.sp.value} / ${e.system.attributes.hp.sp.max}`;s.find(`div[data-tab="overview"]`).find(`.member[data-actor-uuid="${e.uuid}"]`).find(".portrait").append(`<div class="health-bar stamina-bar" style=" bottom: -10px;"><div class="bar" style="width: ${t<0?0:t}%; background-color: #3535d7;"></div><span><i class="fa-solid fas fa-running"></i>${a}</span></div>`);s.find(`div[data-tab="exploration"]`).find(`.content[data-actor-uuid="${e.uuid}"]`).parent().append(`<footer class="health-bar stamina-bar"><div class="bar" style="width: ${t<0?0:t}%; background-color: #3535d7;"></div><span><i class="fas fa-running"></i>${a}</span></footer>`)})}Hooks.on("renderPartySheetPF2e",function(t,a){a.find(".skills > .tag-light").click(async e=>{await handleSkillRoll(e,t)});a.find("section.saving-throws .score").click(async e=>{await handleSaveRoll(e,t)});addStamina(t,a);if(game.settings.get(moduleName,"useHealthStatus")){const g=healthStatuses();if(g.length){t.actor.members.forEach(e=>{healthEstimateForActor(e,a,g)})}}let l=game.settings.get(moduleName,"showEffects");let c=game.settings.get(moduleName,"showFocus");let u=game.settings.get(moduleName,"showSpells");const e=a.find("[data-tab=overview] .member");e.each((e,s)=>{const t=$(s).data().actorUuid.replace("Actor.","");const i=game.actors.get(t);if(l){const a=(i?.system?.perception?.senses??[]).map(e=>e.label);const n=a.length>0?`<label  class="senses-text" data-tooltip="${a.join("<br/>")}">Senses</label>`:`<label class="senses-text">No Special Senses</label>`;$(s).find(".score.senses").addClass("senses-new");$(s).find(".score.senses").html(n);if($(s).find(".elements").length===0){let e=[...i.itemTypes.condition,...i.itemTypes.effect];if(!game.user.isGM){e=e.filter(e=>e.isIdentified)}const o=e.map(e=>{let t=`<div class="item-image" style="background-image: url(${e.img})" data-tooltip="${e.name}">`;if(e.value&&e.value>0){t+=`<div class="value-wrapper"><div class="value"><strong style="display: inline;">${e.value}</strong></div></div>`}t+=`</div>`;return t}).join("");const r=`<section class="effects"><div class="value" style="display: flex;">${o}</div></section>`;$(s).find(".main-stats").append(r)}}if(c&&i&&i.isOfType("character")&&i.system.resources.focus.max>0){let t='<span class="pips">';let a=i.system.resources.focus.value;for(let e=0;e<i.system.resources.focus.max;e++){t+=`<i class='${a>e?"fa-solid fa-dot-circle":"fa-regular fa-circle"}'></i>`}t+="</span>";$(s).find(".saving-throws").after(`<section class="focus"><div class="value"><h4>Focus</h4>${t}</div></section>`)}if(u){let e=spellData(i);if(e.length>0){$(s).find(".saving-throws").after(`<section class="spells-data"><label class="spells-text" data-tooltip="${e.map(e=>`${e.type} ${e.rank} Rank - ${e.active}/${e.max}`).join("<br/>")}">Spells Info</label></section>`)}}});if(game.settings.get(moduleName,"partyLeader")){if(a.find("leader-position").length===0){const h=t.actor.getFlag(moduleName,"leader")??"none";const y=t.actor.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug)).map(e=>`<option value="${e.uuid}" ${h===e.uuid?"selected":""}>${e.name}</option>`).join("");a.find(".content").find(".summary > nav").append(`<div class="leader-position"><label>Choose a leader:</label><select name="leader" class="change-leader"><option value="none" ${h==="none"?"selected":""}>None</option>${y}</select></div>`);if(h!="none"){const b=a.find('div[data-tab="overview"]').find("div.content");b.find(".member").sort(function(e,t){return e.dataset.actorUuid===h?-1:1}).appendTo(b)}$(a.find(".change-leader")).on("change",async function(e){await t.actor.setFlag(moduleName,"leader",$(this).val())})}}if(game.settings.get(moduleName,"hideWealthFromPC")&&!game.user.isGM){a.find(".inventory-members").find(".sub-data > .value").addClass("hidden");$(a.find(".inventory-members").find(".summary-data").children()[1]).css({display:"none"})}const s=`<div><a class="travel-duration" data-document-id="${t.actor.id}" >Calculate Travel duration   <i class="far fa-clock"></i></a></div>`;const i=`<div><a class="travel-duration-short" data-document-id="${t.actor.id}" >Calculate Travel (Easy mod)  <i class="far fa-clock"></i></a></div>`;a.find(".exploration-members").find(".summary-data").append(s).append(i);$(a.find(".travel-duration")).on("click",async function(e){e.stopPropagation();const t=game.actors.get($(e.currentTarget).data().documentId);const a=t.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug));if(a.length>0){game.pf2e.gm.launchTravelSheet(a)}});$(a.find(".travel-duration-short")).on("click",async function(e){e.stopPropagation();const t=game.actors.get($(e.currentTarget).data().documentId);const a=t.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug));if(a.length>0){let u=Math.min(...a.map(e=>e.attributes.speed.total));let e=game.settings.get(moduleName,"defaultCalculatorValue")?`<option value="feet" selected>Feet</option>
                                <option value="miles" >Miles</option>`:`<option value="feet">Feet</option>
                            <option value="miles" selected>Miles</option>`;new foundry.applications.api.DialogV2({window:{title:"Calculator"},content:`<form><div class="form-group travel-duration">
                    <div class="journey-calc">
                        <label>Average speed</label>
                        <input name="speed" value=${u} type="number" data-dtype="Number">
                        </br>
                        <label>Distance</label>
                        <input name="distance" value="0" type="number" data-dtype="Number">
                        <select name="distanceUnit">
                           ${e}
                        </select>
                    </div>
                </div></form>`,buttons:[{action:"ok",label:"Calculate",callback:async e=>{let t=e.target.closest("form");u=t.querySelector("[name=speed]").value;let a=t.querySelector("[name=distance]").value;const s=t.querySelector("[name=distanceUnit]").value;if(s==="miles"){a*=golarionMileInFeet}const i=Math.round(a/(u*10));const n=Math.floor(i/minutesPerWeek);const o=Math.floor((i-n*minutesPerWeek)/minutesPerDay);const r=Math.floor((i-n*minutesPerWeek-o*minutesPerDay)/60);const l=i-n*minutesPerWeek-o*minutesPerDay-r*60;const c=`${n?"Weeks "+n+" ":""}${o?"Days "+o+" ":""}${String(r).padStart(2,"0")}:${String(l).padStart(2,"0")}`;ui.notifications.info("Total duration: "+c)}},{action:"cancel",label:"Cancel"}],default:"cancel"}).render(true)}});const n=t.actor.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug));const o=[...n.map(e=>[...e.itemTypes.equipment,...e.itemTypes.consumable]).flat(),...t.actor.itemTypes.equipment,...t.actor.itemTypes.consumable];const r=o.filter(e=>e.slug==="rations").map(e=>e.uses.value+e.uses.max*(e.quantity-1)).reduce((e,t)=>{return e+t},0);const d=o.filter(e=>e.slug==="ration-tonic").map(e=>e.quantity).reduce((e,t)=>{return e+t},0);const m=o.filter(e=>e.slug==="ration-tonic-greater").map(e=>7*e.quantity).reduce((e,t)=>{return e+t},0);const f=o.filter(e=>e.slug==="waterskin").map(e=>e.quantity).reduce((e,t)=>{return e+t},0);a.find(".exploration-members").find(".summary-data").append(`<div><label>Food per Partyâ€”Days</label><span class="value">${Math.floor((r+d+m)/n.length)}</span></div>`).append(`<div><label>Water per Partyâ€”Days</label><span class="value">${Math.floor(f/n.length)}</span></div>`);let p=game.settings.get(moduleName,"maxEncumbrance");if(p&&p>0){let e=a.find(".total-bulk");e.append(`<span style="margin-left:auto;padding-right: 5px;">Max Bulk: ${p}</span>`)}if(game.settings.get(moduleName,"hideGeneralInfo")){a.find('[data-tab="overview"]').find(".member header .blurb").hide()}});function spellData(e){let a=[];let t=e.itemTypes.spellcastingEntry.filter(e=>e.isPrepared).map(e=>e?.system?.slots).filter(e=>e);t.forEach(t=>{let e=Object.keys(t).filter(e=>e!=="slot0");e.forEach(e=>{if(t[e].max>0){a.push({type:"Prepared",rank:Number(e.substring(4)),active:Object.values(t[e].prepared).filter(e=>!e.expended).length,max:t[e].max})}})});let s=e.itemTypes.spellcastingEntry.filter(e=>e.isSpontaneous).map(e=>e?.system?.slots).filter(e=>e);s.forEach(t=>{let e=Object.keys(t).filter(e=>e!=="slot0");e.forEach(e=>{if(t[e].max>0){a.push({type:"Spontaneous",rank:Number(e.substring(4)),active:t[e].value,max:t[e].max})}})});let i=e.itemTypes.spellcastingEntry.filter(e=>e.isInnate);i.forEach(e=>{let t=e.spells.contents.map(e=>e.system.location);t.forEach(e=>{if(e.uses.max>0&&e.heightenedLevel){a.push({type:"Innate",rank:e.heightenedLevel,active:e.uses.value,max:e.uses.max})}})});return a}Hooks.on("renderActorSheetPF2e",function(t,a){if(t.actor.type!=="character"){return}if(t.actor.parties.size===0){return}const e=[...t.actor.parties];const s=e.map(e=>e.members).flat().filter(e=>e.id!==t.actor.id).filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug));a.find(".sheet-content .wealth").append('<a class="show-party-members" title="Party Members" style=""><i class="fa-solid fa-address-card"></i></a>');const i=[...s,...e].map(e=>`<li class="box "><div class="actor-link content" data-actor-uuid="${e.uuid}" data-action="open-sheet" data-tab="inventory"><img src="${e.getActiveTokens(false,true)[0]?.texture?.src??e.img}" data-tooltip="${e.name}"></div><div class="footer"><i class="fa-solid fa-weight-hanging"></i> ${toBulk(e.inventory.bulk.value)}/${e?.isOfType("party")?"âˆž":e.inventory.bulk.encumberedAfter+"B"}</div></li>`).join("");const n=`<form><section data-region="inventoryMembers"><ol class="box-list inventory-members" style="flex-direction: row; flex-wrap: wrap; justify-content: center;">${i}</ol></section><form>`;a.find(".sheet-content").find(".coinage").append(`<div class="sidebar-party-members" style="display: ${t.actor.getFlag(moduleName,"partySharingDisplay")??"none"}">${n}</aside>`);$(a.find(".show-party-members")).on("click",async function(e){e.stopPropagation();a.find(".sidebar-party-members").toggle();t.actor.update({flags:{[moduleName]:{partySharingDisplay:a.find(".sidebar-party-members").css("display")??"none"}}},{noHook:true})})});function toBulk(e){let t="";if(e?.normal>0){t+=` ${e?.normal}B`}if(e?.light>0){t+=`${!!t?",":""}${e?.light}L`}return t}Hooks.once("ready",()=>{allTraits={...CONFIG.PF2E.equipmentTraits,...CONFIG.PF2E.weaponTraits};socketListener()});Hooks.on("ready",()=>{const e=foundry.documents.collections.Actors.registeredSheets.find(e=>e.name==="CharacterSheetPF2e");if(!e){return}const r=e.prototype._onDropItem;e.prototype._onDropItem=async function(e,t){const a=e.target?.closest("[data-region]")?.dataset?.region;const s=e.target?.closest("[data-actor-uuid]")?.dataset?.actorUuid;if(a==="inventoryMembers"&&s){const i=await CONFIG.Item.documentClass.fromDropData(t);if(!i)return[];const n=foundry.utils.parseUuid(s).documentId;if(n&&i?.actor&&i?.isOfType("physical")){const o=await new MoveLootPopup(i,{}).resolve();if(o){sendItemToActor(i.actor?.id,n,i.id,o.quantity,o.newStack)}return[]}}return await r.call(this,e,t)}});function hasPermissions(e){return 3===e?.ownership[game.user.id]||game.user.isGM}class MoveLootPopup extends FormApplication{#resolve=null;constructor(e,t){super(e,t)}async resolve(){if(this.object.quantity<=1){return{quantity:this.object.quantity,newStack:false}}this.render(true);return new Promise(e=>{this.#resolve=e})}async getData(){const[e,t]=["PF2E.loot.MoveLootMessage","PF2E.loot.MoveLoot"];return{...await super.getData(),quantity:{default:this.object.quantity,max:this.object.quantity},newStack:false,lockStack:false,prompt:e,buttonLabel:t}}static get defaultOptions(){return{...super.defaultOptions,id:"MoveLootPopup",classes:[],title:game.i18n.localize("PF2E.loot.MoveLootPopupTitle"),template:`modules/${moduleName}/templates/move-loot.hbs`,width:"auto",quantity:{default:1,max:1},newStack:false,lockStack:false,isPurchase:false}}async _updateObject(e,t){this.#resolve?.({quantity:t.quantity??1,newStack:t.newStack});this.resolve=null}async close(e){this.#resolve?.(null);return super.close(e)}}Hooks.on("createItem",e=>{if(!e?.actor){return}if(!e?.actor?.isOfType("party")){return}let t=game.settings.get(moduleName,"maxEncumbrance");if(t&&t>0&&game.settings.get(moduleName,"maxEncumbranceBehaviour")==="notify"){if(e.actor.inventory.bulk.value.value+e.bulk.value>t){ui.notifications.info("Party Stash is Encumbered")}}});Hooks.on("updateItem",(e,t)=>{if(!e?.actor){return}if(!e?.actor?.isOfType("party")){return}if(!t?.system?.quantity){return}let a=game.settings.get(moduleName,"maxEncumbrance");if(a&&a>0&&game.settings.get(moduleName,"maxEncumbranceBehaviour")==="notify"){if(e.actor.inventory.bulk.value.value+e.bulk.value>a){ui.notifications.info("Party Stash is Encumbered")}}});Hooks.on("preCreateItem",e=>{if(!e?.actor){return}if(!e?.actor?.isOfType("party")){return}let t=game.settings.get(moduleName,"maxEncumbrance");if(t&&t>0&&game.settings.get(moduleName,"maxEncumbranceBehaviour")==="notadd"){if(e.actor.inventory.bulk.value.value+e.bulk.value>t){ui.notifications.info("Party Stash is Encumbered");return false}}});Hooks.on("preUpdateItem",(e,t)=>{if(!e?.actor){return}if(!e?.actor?.isOfType("party")){return}if(!t?.system?.quantity){return}let a=game.settings.get(moduleName,"maxEncumbrance");if(a&&a>0&&game.settings.get(moduleName,"maxEncumbranceBehaviour")==="notadd"){if(e.actor.inventory.bulk.value.value+e.bulk.value>a){ui.notifications.info("Party Stash is Encumbered");return false}}});const SOCKET_NAME=`module.${moduleName}`;const SEND_ITEM="sendItemToActor";function executeAsGM(e,t){game.socket.emit(SOCKET_NAME,{type:e,payload:t})}function socketListener(){game.socket.on(SOCKET_NAME,async({type:n,payload:o,userId:e})=>{if(game.user.isActiveGM){switch(n){case SEND_ITEM:let{ownerId:e,targetId:t,itemId:a,qty:s,stack:i}=o;sendItemToActor(e,t,a,s,i);break;default:console.error("Unknown socket message:"+n);break}}})}class SubSystemForm extends FormApplication{subsystemData=undefined;dropListValue=undefined;constructor(e){super({});this.actor=e.actor;this.dropListValue="reputation";this.subsystemData=this.getSubsystemData(this.dropListValue)}getData(){return foundry.utils.mergeObject(super.getData(),{rows:this.subsystemData,dropListValue:this.dropListValue,pregenVisibility:!["reputation","infiltration","research","chases"].includes(this.dropListValue)?"hidden":"visible",addVisibility:!["reputation","victory-points","influence"].includes(this.dropListValue)?"hidden":"visible"})}getSubsystemData(e){let t=(this.actor.getFlag(moduleName,"subsystems")??{})?.[e]??{};return JSON.parse(JSON.stringify(t))}async saveSubsystemData(e){const t=JSON.parse(JSON.stringify(this.actor.getFlag(moduleName,"subsystems")??{}));t[this.dropListValue]=e;if(Object.keys(e).length===0){delete t[this.dropListValue]}await this.actor.unsetFlag(moduleName,"subsystems");await this.actor.setFlag(moduleName,"subsystems",t);this.subsystemData=this.getSubsystemData(this.dropListValue)}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{title:"Subsystems Config",id:`${moduleName}-configure`,classes:[moduleName],template:"modules/pf2e-party-sheet-helper/templates/sub-systems.hbs",width:500,height:"auto",closeOnSubmit:false,submitOnChange:false,resizable:true})}async _updateObject(e,t){const s={};if(t["row-name"]){let e=typeof t["row-name"]==="string"?[t["row-name"]]:t["row-name"];let a=typeof t["row-value"]==="number"?[t["row-value"]]:t["row-value"];e.forEach((e,t)=>{s[e]=a[t]})}await this.saveSubsystemData(s)}activateListeners(s){super.activateListeners(s);s.find("a.create-pregen").click(async e=>{const t=s.find(".drop-list").val();if("infiltration"===t){this.subsystemData["Infiltration Points"]??=0;this.subsystemData["Awareness Points"]??=0;this.subsystemData["Edge Points"]??=0;this.render(true)}else if("research"===t){this.subsystemData["Research Points"]??=0;this.render(true)}else if("chases"===t){this.actor.members.filter(e=>!e?.isOfType("familiar")).filter(e=>!["eidolon","animal-companion"].includes(e.class?.slug)).forEach((e,t)=>{this.subsystemData[e.name]??=0});this.render(true)}else if("reputation"===t){const{map:a}=await Dialog.wait({title:"Choose Adventure",content:`
                        <h3>Adventures</h3>
                            <select id="map">
                            <option value=0>Blood Lords</option>
                            <option value=1>Seven Dooms for Sandpoint</option>
                            <option value=2>Season of Ghosts</option>
                            <option value=3>Sky Kings Tomb</option>
                        </select><hr>
                    `,buttons:{ok:{label:"Choose",icon:"<i class='fa-solid fa-hand-fist'></i>",callback:e=>{return{map:parseInt(e[0].querySelector("#map").value)}}},cancel:{label:"Cancel",icon:"<i class='fa-solid fa-ban'></i>"}},default:"ok"});if(a===undefined){return}if(a===0){this.subsystemData["Builders League"]??=0;this.subsystemData["Celebrants"]??=0;this.subsystemData["Export Guild"]??=0;this.subsystemData["Reanimators"]??=0;this.subsystemData["Tax Collectors Union"]??=0;this.render(true)}else if(a===1){this.subsystemData["Bunyip Club"]??=0;this.subsystemData["Runewatchers"]??=0;this.subsystemData["Sandpoint Cathedral"]??=0;this.subsystemData["Sandpoint Mercantile League"]??=0;this.subsystemData["Scarnetti Consortium"]??=0;this.subsystemData["Town Watch"]??=0;this.subsystemData["Townsfolk"]??=0;this.render(true)}else if(a===2){this.subsystemData["Northridge"]??=0;this.subsystemData["Southbank"]??=0;this.render(true)}else if(a===3){this.subsystemData["Highhelm"]??=0;this.render(true)}}else{ui.notifications.info("Not implemented yet");return}});s.find("a.remove-subsystem-row").click(async e=>{const t=$(e.currentTarget).closest(".package-overview").find('[name="row-name"]').val();delete this.subsystemData[t];this.render(true)});s.find("a.create-subsystem-row").click(async e=>{const{name:t}=await Dialog.wait({title:"Add new record",content:`<input type="text" name="name" />`,buttons:{ok:{label:"Add",icon:"<i class='fas fa-plus'></i>",callback:e=>{return{name:e.find("input").val()}}},cancel:{label:"Cancel",icon:"<i class='fa-solid fa-ban'></i>"}},default:"cancel"});if(!t){return}this.subsystemData[t]=0;this.render(true)});s.find(".drop-list").change(async e=>{this.dropListValue=$(e.currentTarget).val();this.subsystemData=this.getSubsystemData(this.dropListValue);this.render(true)})}}Hooks.on("getPartySheetPF2eHeaderButtons",function(e,t){if(!game.settings.get(moduleName,"enableSubsystem")){return}if(!game.user.isGM){return}t.unshift({label:"Subsystems",icon:"fa fa-gears",class:`${moduleName}-sub-system`,onclick:()=>{new SubSystemForm({actor:e.actor}).render(true)}})});Hooks.on("renderLootSheetPF2e",function(a,e,t){if(!(game.user.isGM||game.settings.get(moduleName,"showPrintPC"))){return}e.find(".content").find(".inventory").find(".currency").append(`<li><button type="button" class="print-inv" data-tooltip="Print Inventory"><i class="fas fa-print"></i></button></li>`);e.find(".content").find(".inventory").find(".currency").find(".print-inv").on("click",async function(e){let t=window.open("about:blank","_blank");if(!t||navigator?.appVersion?.includes("FoundryVirtualTabletop")){saveDataToFile(fullGeneratePrintForActor(a.actor),"text/html",`Printed_Inventory_${a.actor.name}.html`)}else{t.document.write(fullGeneratePrintForActor(a.actor));t.document.close()}})});Hooks.on("renderPartySheetPF2e",function(a,e,t){if(!(game.user.isGM||game.settings.get(moduleName,"showPrintPC"))){return}e.find(".container").find(".inventory").find(".currency").append(`<li><button type="button" class="print-inv" data-tooltip="Print Inventory"><i class="fas fa-print"></i></button></li>`);e.find(".container").find(".inventory").find(".currency").find(".print-inv").on("click",async function(e){let t=window.open("about:blank","_blank");if(!t||navigator?.appVersion?.includes("FoundryVirtualTabletop")){saveDataToFile(generatePrintForParty(a.actor),"text/html",`Printed_Inventory_${a.actor.name}.html`)}else{t.document.write(generatePrintForParty(a.actor));t.document.close()}})});const SHORT_SAVES={};Hooks.on("pf2e.systemReady",function(){SHORT_SAVES[game.i18n.localize("PF2E.SavesFortitudeShort")]="fortitude";SHORT_SAVES[game.i18n.localize("PF2E.SavesReflexShort")]="reflex";SHORT_SAVES[game.i18n.localize("PF2E.SavesWillShort")]="will";if(game.settings.get(moduleName,"enableSubsystem")){let i=CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner;CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner=async function(e,t){let a=await i.call(this,e,t);if(game.user.isGM||game.settings.get(moduleName,"showSubsystem")){const s=`
                <section class="tab sidebar-tab directory flexcol subsystem-section">
                    <ol class="directory-list subsystem-list">
                        ${subSystemRows(this.object)}
                    </ol>
                </section>`;a.find(".sub-nav:not(.sub-sub-nav)").append('<a data-tab="sub-system" class="">Subsystems</a>');a.find(".container").append(`<div class="tab" data-tab="sub-system" data-region="sub-system"><div class="content">${s}</div></div>`);a.find(".container").find(".subsystem-list").find(".directory-item").on("click",async function(e){e.preventDefault();let t=$(e.currentTarget);t.toggleClass("collapsed expanded")})}return a}}if(game.user.isGM&&game.settings.get(moduleName,"showAfflictions")){let s=CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner;CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner=async function(e,t){let a=await s.call(this,e,t);htmlAffliction(this.actor,a);return a}}if(game.settings.get(moduleName,"showAchievements")){let s=CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner;CONFIG.Actor.sheetClasses.party["pf2e.PartySheetPF2e"].cls.prototype._renderInner=async function(e,t){let a=await s.call(this,e,t);htmlAchievements(this.actor,a);return a}}});function generatePrintForParty(e){let t=generatePrintForActor(e);t+=e.members.filter(e=>!e?.isOfType("familiar")).map(e=>generatePrintForActor(e)).join("");if(game.settings.get(moduleName,"printExtendedInfo")){t+=`<br/>${detailedInfo(e)}`}return t}function fullGeneratePrintForActor(t){let a=generatePrintForActor(t);if(game.settings.get(moduleName,"printExtendedInfo")){let e=[...t.itemTypes.weapon,...t.itemTypes.armor,...t.itemTypes.equipment,...t.itemTypes.consumable,...t.itemTypes.treasure];a+=`<br/>${printItems(e,"All items",true)}`}return a}function generatePrintForActor(e){let t=printItems(e.itemTypes.weapon,"Weapons");let a=printItems(e.itemTypes.armor,"Armor");let s=printItems(e.itemTypes.equipment,"Equipment");let i=printItems(e.itemTypes.consumable,"Consumables");let n=printItems(e.itemTypes.treasure,"Treasure");return`<h1>${e.name}</h1>
      ${!t&&!a&&!s&&!i&&!n?"No items":""}
      ${t}
      ${a}
      ${s}
      ${i}
      ${n}
    `}function detailedInfo(e){let t=[...e.itemTypes.weapon,...e.itemTypes.armor,...e.itemTypes.equipment,...e.itemTypes.consumable,...e.itemTypes.treasure,...e.members.filter(e=>!e?.isOfType("familiar")).map(e=>[...e.itemTypes.weapon,...e.itemTypes.armor,...e.itemTypes.equipment,...e.itemTypes.consumable,...e.itemTypes.treasure]).flat()];return printItems(t,"All items",true)}function printItems(e,t,a=false){let s=e.map(e=>`<li>${e.name} ${e.quantity>1?"(x"+e.quantity+")":""} ${e?.identificationStatus==="unidentified"||!game.settings.get(moduleName,"printShowPrice")?"":e.price.value}${a?extendInfo(e):""}</li>`);s=s.length===0?"":`<h3>${t}</h3><ol style="list-style: inside;">${s.join("")}</ol>`;return s}function extendInfo(e){return` <br/> ${[e.rarity,...e.traits].map(e=>{return allTraits[e]?game.i18n.localize(allTraits[e]):e}).join(", ").toUpperCase()} <br/> ${e.description}`}const subSystemLabels={reputation:"Reputation","victory-points":"Victory Points",influence:"Influence",research:"Research",chases:"Chases",infiltration:"Infiltration"};function subSystemRows(e){const a=e.getFlag(moduleName,"subsystems")??{};return Object.keys(a).map(e=>{let t=`<li class="directory-item folder flexcol collapsed">
          <header class="folder-header flexrow">
            <h3 class="noborder"><i class="fas fa-folder-open fa-fw"></i>${subSystemLabels[e]}</h3>
          </header>
          <ol class="subdirectory plain">
                ${subSystemRow(a[e],SUBSYSTEM_TIERS_LABELS[e])}
          </ol>
        </li>`;return t}).join("")}function getTierLabelByValue(t,e){if(!e){return""}let a=e.find(e=>t<=e[0]);if(!a){return""}return` (${game.i18n.localize(a[1])})`}function subSystemRow(e,t){return Object.entries(e).sort().map(e=>`<li class="directory-item entry" style="display: flex;flex-direction: row;">
                <h3 class="entry-name">${e[0]}</h3><label>${e[1]}${getTierLabelByValue(e[1],t)}</label>
            </li>`).join("")}let POINT_MAP={criticalFailure:-1,failure:0,success:1,criticalSuccess:2};const SUBSYSTEM_ACTION_REGEXP=new RegExp("action:(reputation|victory-points|influence|research|chases|infiltration)","");Hooks.on("preCreateChatMessage",async t=>{if(!game.settings.get(moduleName,"enableSubsystem")){return}if(t?.flags?.pf2e?.context?.type!=="skill-check"){return}if(!t?.flags?.pf2e?.context?.options){return}let e=t?.flags?.pf2e?.context?.options.filter(e=>e.match(SUBSYSTEM_ACTION_REGEXP));if(e.length===0){return}let a=e[0].substring(7);if(!t?.actor?.parties){return}if(!t.actor.parties.first()){return}let s=t?.flags?.pf2e?.context?.options.find(e=>e.startsWith("npc-name"));if(!s){return}s=s.substring(9).trim();let i=t?.flags?.pf2e?.context?.outcome;let n=POINT_MAP[i]??0;if(t.isReroll){let e=POINT_MAP[t?.flags?.pf2e?.context?.unadjustedOutcome]??0;n=n+-e}let o=subsystemData(t.actor.parties.first(),a);o[s]=(o[s]??0)+n;await saveSubsystemData(t.actor.parties.first(),a,o)});function subsystemData(e,t){return JSON.parse(JSON.stringify((e.getFlag(moduleName,"subsystems")??{})?.[t]??{}))}async function saveSubsystemData(e,t,a){const s=JSON.parse(JSON.stringify(e.getFlag(moduleName,"subsystems")??{}));s[t]=a;await e.unsetFlag(moduleName,"subsystems");await e.setFlag(moduleName,"subsystems",s)}class AchievementForm extends FormApplication{constructor(e){super({});this.achievement=e.achievement;this.index=e.index;this.actor=e.actor}getData(){if(this.achievement){return foundry.utils.mergeObject(super.getData(),{achievement:this.achievement})}else{let e=this.actor.members.filter(e=>e.isOfType("character")).reduce((e,t)=>{e[t.id]=t.name;return e},{});e[this.actor.id]=this.actor.name;return foundry.utils.mergeObject(super.getData(),{pcs:e})}}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{title:"Achievements Config",id:`${moduleName}-achievements-configure`,classes:[moduleName],template:"modules/pf2e-party-sheet-helper/templates/achievements.hbs",width:500,height:"auto",closeOnSubmit:false,submitOnChange:false,resizable:true})}async _updateObject(e,s){if(!s?.name||!s["texture.src"]){ui.notifications.warn("Name and image fields are missing");return}if(this.achievement){let e=this.actor.getFlag(moduleName,"achievements")??[];e[this.index]={text:s.name,description:s.description,img:s["texture.src"],owner:this.achievement.owner};await this.actor.setFlag(moduleName,"achievements",e)}else{let t=this.actor.getFlag(moduleName,"achievements")??[];let a=s.owner||[];if(!a.length){a.push(this.actor.id)}for(let e of a){t.push({text:s.name,description:s.description,img:s["texture.src"],owner:e})}await this.actor.setFlag(moduleName,"achievements",t)}this.close()}}Hooks.on("getPartySheetPF2eHeaderButtons",function(e,t){if(!game.user.isGM){return}t.unshift({label:"",icon:"fa fa-trophy",class:`${moduleName}-achievements`,onclick:()=>{new AchievementForm({actor:e.actor}).render(true)}})});function htmlAchievements(i,s){let t=foundry.utils.deepClone(i.getFlag(moduleName,"achievements")??[]);t=t.reduce((e,t,a)=>{t.idx=a;e[t.owner]??=[];e[t.owner].push(t);return e},{});t[i.id]=[...t[undefined]||[],...t[i.id]||[]];delete t[undefined];let e=Object.keys(t).sort((e,t)=>e===i.id?-1:1).map(e=>`<a data-tab="${e}">${game.actors.get(e).name}</a>`);e=e.length===1?"":`<nav class="sub-nav sub-sub-nav">
                ${e.join("")}
            </nav>`;let a=Object.keys(t).length===1?`<div class="tab" data-tab="achievements" data-region="achievements">
            <div class="achievements content">${createAchievementImages(t[i.id])}</div>
            </div>`:`<div class="tab" data-tab="achievements" data-region="achievements">${e}
                <section style="height: 100%;">
                     ${Object.keys(t).map(e=>`<div class="tab" data-tab="${e}" data-region="s-achievements">
                <div class="achievements content">${createAchievementImages(t[e])}</div>
            </div>`).join("")}   
                </section>
            </div>`;s.find(".sub-nav:not(.sub-sub-nav)").append('<a data-tab="achievements" class="">Achievements</a>');s.find(".container").append(a);s.find(".achievements .close").on("click",async function(e){const t=$(e.currentTarget);const a=t.parent().data().index;let s=i.getFlag(moduleName,"achievements")??[];s.splice(a,1);await i.setFlag(moduleName,"achievements",s)});s.find(".achievements .edit").on("click",async function(e){const t=$(e.currentTarget);const a=t.parent().data().index;let s=i.getFlag(moduleName,"achievements")[a];new AchievementForm({achievement:s,index:a,actor:i}).render(true)});s.on("click",'[data-region="achievements"] > .sub-nav > a',e=>{let t=$(e.currentTarget);if(t.hasClass("active")){return}t.closest(".sub-nav").find("a").removeClass("active");t.addClass("active");let a=t.data("tab");s.find(`[data-region="s-achievements"]`).removeClass("active");s.find(`[data-tab="${a}"]`).addClass("active")});s.on("click",'nav.sub-nav a[data-tab="achievements"]',e=>{s.find(`a[data-tab="${i.id}"],div[data-tab="${i.id}"]`).trigger("click")})}function createAchievementImages(e){return e.sort((e,t)=>e.text.localeCompare(t.text)).map(e=>`<div class="portrait" data-tooltip="${e.description}" data-index=${e.idx}>${game.user.isGM?'<i class="fas fa-edit edit"></i><i class="fas fa-times close"></i>':""}<img src="${e.img}"><label>${e.text}</label></div>`).join("")}Hooks.on("renderPartySheetPF2e",function(e,t){if(!game.settings.get(moduleName,"skills")||!game.user.isGM){return}let a=foundry.utils.deepClone(e.actor.getFlag(moduleName,"skills")??{});let s=Object.entries(a).map(([e,t])=>{let a=t.label==="perception"?game.i18n.localize("PF2E.PerceptionLabel"):t.label?game.i18n.localize("PF2E.Skill."+t.label?.titleCase()):"Unknown";return`<tr>
                <td>${t.name}</td>
                <td>${a}</td>
                <td>${t.proficiency?.titleCase()||"Unknown"}</td>
                <td>${t.value}</td>
                <td>${new Date(t.timestamp).toLocaleString()}</td>
                <td data-id="${t.id}" class="link-to-message"><i class="fas fa-comments"></i></td>
                <td data-key="${e}" class="delete-row"><i class="fas fa-close"></i></td>
            </tr>`}).join("");const i=`
        <section class="tab sidebar-tab directory flexcol">
            <table id="sub-skills">
                <tr>
                    <th>Name</th>
                    <th>Skill</th>
                    <th>Proficiency of skill</th>
                    <th>Value</th>
                    <th>Date</th>
                </tr>
                ${s}
            </table>
        </section>
    `;t.find(".sub-nav:not(.sub-sub-nav)").append('<a data-tab="skills" class="">Skills</a>');t.find(".container").append(`<div class="tab" data-tab="skills" data-region="skills"><div class="content">${i}</div></div>`);$(".link-to-message").on("click",function(){$(document).find(`#chat .chat-log li[data-message-id="${this?.dataset?.id}"]`)[0]?.scrollIntoView({block:"start"})});$(".delete-row").on("click",async function(){await game.actors.party.unsetFlag("pf2e-party-sheet-helper",`skills.${this?.dataset?.key}`)})});Hooks.on("createChatMessage",async a=>{if(!game.settings.get(moduleName,"skills")&&!isGM()){return}if(a.flags?.pf2e?.context?.domains?.includes("initiative")){return}if(!a.flags?.pf2e?.context?.domains?.includes("deception-check")&&!a.flags?.pf2e?.context?.domains?.includes("perception-check")&&!a.flags?.pf2e?.context?.domains?.includes("stealth-check")){return}let s=Number.isNumeric(a.content)?Number(a.content):0;let i=a.flags.pf2e.modifierName;let n=a.flags.pf2e.context.options.find(e=>e.startsWith("proficiency:"))?.split(":")?.[1];game.actors.filter(e=>e.isOfType("party")).filter(e=>e.members.find(e=>e===a.actor)).forEach((e,t)=>{e.setFlag(moduleName,"skills",{[`${a.actor.id}-${a.flags.pf2e.modifierName}`]:{name:a.actor.name,label:i,value:s,proficiency:n,timestamp:a.timestamp,id:a.id}})})});Hooks.on("renderCharacterSheetPF2e",function(t,e){if(!game.settings.get(moduleName,"shareHero")){return}let a=t.actor.parties.first();if(!a){return}let s=a.getFlag(moduleName,"heropoints");if(!s?.value){return}let i=e.find(".char-header .char-details");i.append(`<i class="fa-solid fa-hand-fist party-hero-points" title="Get Party Hero Points">`);$(e).find(".party-hero-points").click(async e=>{if(!s?.value){ui.notifications.info("There are no Party Hero Points");return}t.actor.update({"system.resources.heroPoints.value":Math.min(t.actor.heroPoints.value+1,t.actor.heroPoints.max)});a.setFlag(moduleName,"heropoints",{value:Math.max(s.value-1,0)});ui.notifications.info("Hero Point was added")})});Hooks.on("renderPartySheetPF2e",function(a,e){if(!game.user.isGM){return}let s=a.actor.getFlag(moduleName,"heropoints")??{max:0,value:0};let t="";for(let e=0;e<s.max;e++){if(s.value>e){t+='<img src="systems/pf2e/dice/basic/heads.webp" />'}else{t+='<span class="empty"></span>'}}let i=`<section class="section-party-hero-points">
        <div class="data">
            <div class="party-hp"><i class="fa-solid fa-hand-fist sync-hero-points" title="Sync Hero Points"></i></div>
            <a class="party-hero-points" data-action="adjust-hero-points">
                ${t}
            </a>
        </div>
    </section>`;let n=e.find('.container [data-tab="overview"] .content .summary');$(i).insertAfter(n);$(e).find(".sync-hero-points").click(async e=>{let t=game.settings.get(moduleName,"shareHero")??0;a.actor.setFlag(moduleName,"heropoints",{max:t,value:t})});$(e).find(".party-hero-points").click(async e=>{const t=Math.min(s.value+1,s.max);a.actor.setFlag(moduleName,"heropoints",{value:t})});$(e).find(".party-hero-points").contextmenu(async e=>{const t=Math.max(s.value-1,0);a.actor.setFlag(moduleName,"heropoints",{value:t})})});function htmlAffliction(e,t){let a=e.members.map(e=>{let t=e.itemTypes.effect.filter(e=>e.flags["pseudo-afflictions"]||e.name?.includes("Affliction")).map(e=>{let t="-";let a="-";if(game.pseudoafflictions){t=game.pseudoafflictions.remaining(e);a=game.pseudoafflictions.stageRemaining(e)}return`
                    <div class="affliction-row">
                        <div class="col"><img src="${e.img}" /></div>
                        <div class="name col"><a>${e.name}</a></div>
                        <div class="col"><a>${t}</a></div>
                        <div class="col"><a>${a}</a></div>
                    </div>
                `}).join("");return`
                <section class="member">
                <div class="portrait">
                    <header>
                        <div class="name"><a>${e.name}</a></div>
                    </header>
                    <a><img src="${e.img}"></a>
                </div>
                <div class="data">
                    <section class="effects">
                        <div class="affliction-row">
                            <div class="col"></div>
                            <div class="name col">Name</div>
                            <div class="col"><a>Total remaining</a></div>
                            <div class="col"><a>Next stage</a></div>
                        </div>
                        ${t}
                    </section>
                </div>
            </section>`}).join("");t.find(".sub-nav:not(.sub-sub-nav)").append('<a data-tab="afflictions" class="">Afflictions</a>');t.find(".container").append(`<div class="tab" data-tab="afflictions" data-region="afflictions"><div class="afflictions content">${a}</div></div>`)}function minusPlusValue(e){return e===0?"0":e>0?`+${e}`:`-${e}`}function createSkillSection(e){return`
    <span class="tag-light" data-rank="${e.rank}">${e.label} ${minusPlusValue(e.mod)}</span>
    `}function createSection(e){let t=e.spellcasting.regular.map(e=>{return{value:e.statistic.dc.value,name:e.name}}).map(e=>`<section class="ac score" data-tooltip="${e.name}"><label>Spell DC</label><span class="value">${e.value}</span></section>`).join("");return`
        <section class="member ">
            <div class="portrait">
                <div>${e.name}</div>
                <div><img src="${e.img}"></div>
            </div>
            <div class="data">
                <div class="main-stats">
                    <section class="ac score">
                        <label>AC</label>
                        <span class="value">${e.armorClass.value}</span>
                    </section>
                    <section class="ac score">
                        <label>Class DC</label>
                        <span class="value">${e.classDC?.dc.value||""}</span>
                    </section>
                    <section class="ac score">
                        <label class="small">Class Spell DC</label>
                        <span class="value">${e.attributes?.classOrSpellDC?.value||""}</span>
                    </section>
                    ${t}
                    <section class="saving-throws">
                        <span class="score"><label>Fort</label>${minusPlusValue(e.saves.fortitude.mod)}</span>
                        <span class="score"><label>Ref</label>${minusPlusValue(e.saves.reflex.mod)}</span>
                        <span class="score"><label>Will</label>${minusPlusValue(e.saves.will.mod)}</span>
                    </section>
                </div>
                <div class="skills">
                    ${Object.values(e.skills).map(e=>createSkillSection(e)).join("")}
                </div>
            </div>
        </section>
    `}Hooks.on("renderPartySheetPF2e",function(e,t){if(!game.settings.get(moduleName,"showEncounterData")||!game.user.isGM){return}const a=e.actor.members.map(e=>createSection(e)).join("");t.find(".sub-nav:not(.sub-sub-nav)").append('<a data-tab="encounter" class="">Encounter</a>');t.find(".container").append(`<div class="tab" data-tab="encounter" data-region="encounter"><div class="content">${a}</div></div>`)});